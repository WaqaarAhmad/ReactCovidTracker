{"version":3,"sources":["components/Cards/Cards.module.css","components/Header.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","images/image.png","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/footer.jpg"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","style","background","ButtonAppBar","classes","className","AppBar","Toolbar","IconButton","edge","color","aria-label","Typography","variant","src","logo","alt","Cards","data","confirmed","recovered","deaths","lastUpdate","styles","container","Grid","justify","item","component","Card","xs","md","cx","card","infected","CardContent","gutterBottom","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","text","lineChart","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","CountryPicker","image","footer","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3806d974.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2io0y\",\"card\":\"Cards_card__3eKg7\",\"infected\":\"Cards_infected__KrkTt\",\"recovered\":\"Cards_recovered__2KLd5\",\"deaths\":\"Cards_deaths__3LVWk\"};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport logo from '../images/image.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n\r\n\r\n\r\n}));\r\n\r\nconst style = {\r\n\r\n  background : '#ffffff',\r\n};\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={style}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            News\r\n          </Typography>\r\n          \r\n          <img src={logo} alt=\"Logo\" />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards =({ data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    //console.log(props);\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    return(\r\n        <div className = {styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textPrimary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end={confirmed.value} duration = {1.5}  separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\"> Number of active cases of Covid-19</Typography>\r\n                        \r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textPrimary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end={recovered.value} duration = {1.5}  separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\"> Number of Recoveries from Covid-19</Typography>\r\n                        \r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textPrimary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end={deaths.value} duration = {1.5}  separator = \",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\"> Number of Deaths caused by Covid-19</Typography>\r\n                        \r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api/index';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\n\nimport { Cards, CountryPicker, Chart, Header } from './components/index';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport footer from './images/footer.jpg';\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <Header />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} /> \n        <img className={styles.image} src={footer} alt=\"footer\" />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__tsyF9\",\"image\":\"App_image__1BOyr\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3YzNm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1aBRd\"};","module.exports = __webpack_public_path__ + \"static/media/footer.ea88cf47.jpg\";"],"sourceRoot":""}